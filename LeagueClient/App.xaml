<Application x:Class="LeagueClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:util="clr-namespace:LeagueClient.UI.Util"
             StartupUri="MainWindow.xaml" Exit="Application_Exit">
  <Application.Resources>
    <ScaleTransform x:Key="CheckboxScale" ScaleX="2" ScaleY="2"/>

    <sys:Double x:Key="Width">1280</sys:Double>
    <sys:Double x:Key="Height">720</sys:Double>
    <sys:Double x:Key="PageWidth">800</sys:Double>
    <sys:Double x:Key="PageHeight">630</sys:Double>

    <sys:Double x:Key="AlertWidth">300</sys:Double>
    <sys:Double x:Key="AlertHeight">180</sys:Double>
    
    <BitmapImage x:Key="IPIcon" UriSource="Media/ip.png"/>
    <BitmapImage x:Key="RPIcon" UriSource="Media/rp.png"/>

    <Color x:Key="FontColor" R="210" G="210" B="210" A="255"/>
    <Color x:Key="FocusColor" R="0" G="122" B="204" A="255"/>
    <Color x:Key="ForeColor" R="62" G="62" B="68" A="255"/>
    <Color x:Key="Back1Color" R="42" G="42" B="46" A="255"/>
    <Color x:Key="Back2Color" R="22" G="22" B="24" A="255"/>
    <Color x:Key="BusyColor" R="255" G="150" B="5" A="255"/>
    <Color x:Key="AwayColor" R="221" G="0" B="0" A="255"/>
    <Color x:Key="ChatColor" R="0" G="179" B="80" A="255"/>

    <SolidColorBrush x:Key="FontBrush" Color="{StaticResource FontColor}"/>
    <SolidColorBrush x:Key="FocusBrush" Color="{x:Static SystemColors.HighlightColor}"/>
    
    <!--<SolidColorBrush x:Key="ForeBrush" Color="{x:Static SystemColors.ControlLightColor}"/>-->
    <!--<SolidColorBrush x:Key="Back1Brush" Color="{x:Static SystemColors.WindowColor}"/>-->
    <!--<SolidColorBrush x:Key="Back2Brush" Color="{x:Static SystemColors.ControlDarkDarkColor}"/>-->
    <SolidColorBrush x:Key="ForeBrush" Color="{StaticResource ForeColor}"/>
    <SolidColorBrush x:Key="Back1Brush" Color="{StaticResource Back1Color}"/>
    <SolidColorBrush x:Key="Back2Brush" Color="{StaticResource Back2Color}"/>
    
    <SolidColorBrush x:Key="BusyBrush" Color="{StaticResource BusyColor}"/>
    <SolidColorBrush x:Key="AwayBrush" Color="{StaticResource AwayColor}"/>
    <SolidColorBrush x:Key="ChatBrush" Color="{StaticResource ChatColor}"/>
    <SolidColorBrush x:Key="GlassBrush" Color="{x:Static SystemParameters.WindowGlassColor}"/>

    <Storyboard x:Key="OldButtonHover">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                      To="{StaticResource ForeColor}" Duration="0:0:0.2"/>
    </Storyboard>
    <Storyboard x:Key="OldButtonPress">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                      To="{StaticResource Back2Color}" Duration="0:0:0.2"/>
    </Storyboard>
    <Storyboard x:Key="OldButtonRelease">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                      To="{StaticResource ForeColor}" Duration="0:0:0.2"/>
    </Storyboard>
    <Storyboard x:Key="OldButtonLeave">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" 
                      To="{StaticResource Back1Color}" Duration="0:0:0.2"/>
    </Storyboard>
    
    <Storyboard x:Key="FadeIn" Storyboard.TargetProperty="Double">
      <ObjectAnimationUsingKeyFrames BeginTime="0" Storyboard.TargetProperty="Visibility">
        <DiscreteObjectKeyFrame KeyTime="0">
          <DiscreteObjectKeyFrame.Value>
            <Visibility>Visible</Visibility>
          </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
      </ObjectAnimationUsingKeyFrames>
      <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.18"/>
    </Storyboard>
    <Storyboard x:Key="FadeOut" Storyboard.TargetProperty="Double">
      <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.18"/>
      <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.18" Storyboard.TargetProperty="Visibility">
        <DiscreteObjectKeyFrame KeyTime="0">
          <DiscreteObjectKeyFrame.Value>
            <Visibility>Collapsed</Visibility>
          </DiscreteObjectKeyFrame.Value>
        </DiscreteObjectKeyFrame>
      </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <Style TargetType="Button" x:Key="CircleButton">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
      <Setter Property="Padding" Value="4 2"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid>
              <Ellipse Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}"/>
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <EventTrigger RoutedEvent="MouseEnter">
          <BeginStoryboard Storyboard="{StaticResource OldButtonHover}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseLeave">
          <BeginStoryboard Storyboard="{StaticResource OldButtonLeave}"/>
        </EventTrigger>
        <Trigger Property="IsPressed" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonPress}"/>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonRelease}"/>
          </Trigger.ExitActions>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="Control">
      <Setter Property="Control.Background" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Control.Foreground" Value="{StaticResource FontBrush}"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="TextBox" BasedOn="{StaticResource Control}">
      <Setter Property="Padding" Value="0 1"/>
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="TextBox">
            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Name="PART_ContentHost"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource Control}">
      <Setter Property="Padding" Value="0 1"/>
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="PasswordBox">
            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Name="PART_ContentHost"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="util:HintedTextBox" BasedOn="{StaticResource Control}">
      <Setter Property="Padding" Value="0 1"/>
      <Setter Property="FontSize" Value="12"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="util:HintedTextBox">
            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Name="PART_ContentHost"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!--<Style TargetType="Button">
      <Style.Resources>
        <Color x:Key="BaseColor" R="5" G="125" B="200" A="255"/>
        <Color x:Key="ShadowColor" R="5" G="75" B="125" A="255"/>
        <Color x:Key="HoverColor" R="5" G="110" B="185" A="255"/>
        <SolidColorBrush x:Key="BaseBrush" Color="{x:Static SystemColors.HighlightColor}"/>
        <SolidColorBrush x:Key="ShadowBrush" Color="{x:Static SystemColors.HotTrackColor}"/>
        <SolidColorBrush x:Key="HoverBrush" Color="{x:Static SystemColors.MenuBarColor}"/>
        <Storyboard x:Key="PressStory">
          <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" To="0 2 0 0" Duration="0:0:0.05"/>
          <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" To="0" Duration="0:0:0.05"/>
        </Storyboard>
        <Storyboard x:Key="ReleaseStory">
          <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" To="0 0 0 0" Duration="0:0:0.05"/>
          <ThicknessAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="BorderThickness" To="0 0 0 2" Duration="0:0:0.05"/>
        </Storyboard>
        <Storyboard x:Key="LeaveStory">
          <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{x:Static SystemColors.HighlightColor}" Duration="0:0:0.1"/>
        </Storyboard>
      </Style.Resources>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="Background" Value="{StaticResource BaseBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ShadowBrush}"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Padding" Value="4 2"/>
      <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border Name="border"  Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 2" Margin="0">
              <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard Storyboard="{StaticResource PressStory}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard Storyboard="{StaticResource ReleaseStory}"/>
                </Trigger.ExitActions>
              </Trigger>
              <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#33D2D2D2"/>
                <Trigger.EnterActions>
                  <BeginStoryboard>
                    <Storyboard>
                      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{x:Static SystemColors.HotTrackColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                  </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard Storyboard="{StaticResource LeaveStory}"/>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>-->
    <Style TargetType="CheckBox" BasedOn="{StaticResource Control}">
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Height" Value="16"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="CheckBox">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Border Background="{TemplateBinding Background}"/>
              <Border BorderThickness="1" Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}">
                <Border.Background>
                  <VisualBrush Viewbox="0 0 10 10" ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                      <Path Name="path" Stroke="{StaticResource FontBrush}"
                        StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round"
                        StrokeThickness="1.4">
                      </Path>
                    </VisualBrush.Visual>
                  </VisualBrush>
                </Border.Background>
              </Border>
              <ContentPresenter Margin="4 0 0 0" TextBlock.FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Left" Grid.Column="1"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="CheckBox.IsChecked" Value="True">
                <Setter TargetName="path" Property="Data" Value="M 1.5 5 L 4 8 L 8.5 2.5"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonHover}"/>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonLeave}"/>
          </Trigger.ExitActions>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonPress}"/>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard Storyboard="{StaticResource OldButtonRelease}"/>
          </Trigger.ExitActions>
        </Trigger>
      </Style.Triggers>
    </Style>

    <Style x:Key="HoverButton" TargetType="Button">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="VerticalAlignment" Value="Top"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Padding" Value="5"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="Black">
              <Border Margin="0" Background="{TemplateBinding Background}">
                <Grid Margin="{TemplateBinding Padding}">
                  <ContentPresenter Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource FontBrush}"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" Content="{TemplateBinding Content}"/>
                </Grid>
              </Border>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="Button">
      <Style.Resources>
        <Color x:Key="BorderColor" R="32" G="32" B="36" A="255"/>
        <Color x:Key="HoverBorderColor" R="5" G="125" B="200" A="255"/>
        <Color x:Key="BackColor" R="62" G="62" B="68" A="255"/>
        <Color x:Key="HoverBackColor" R="82" G="82" B="89" A="255"/>
        <Color x:Key="PressBackColor" R="42" G="42" B="46" A="255"/>
        <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>
        <SolidColorBrush x:Key="BackBrush" Color="{StaticResource BackColor}"/>
        <Storyboard x:Key="HoverStory">
          <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="{StaticResource HoverBorderColor}" Duration="0:0:0.2"/>
          <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource HoverBackColor}" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="PressStory">
          <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource PressBackColor}" Duration="0:0:0.1"/>
        </Storyboard>
        <Storyboard x:Key="ReleaseStory">
          <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource HoverBackColor}" Duration="0:0:0.1" FillBehavior="Stop"/>
        </Storyboard>
        <Storyboard x:Key="LeaveStory">
          <ColorAnimation Storyboard.TargetProperty="BorderBrush.(SolidColorBrush.Color)" To="{StaticResource BorderColor}" Duration="0:0:0.2"/>
          <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource BackColor}" Duration="0:0:0.2"/>
        </Storyboard>
      </Style.Resources>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="Background" Value="{StaticResource BackBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource FontBrush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
      <Setter Property="Padding" Value="4 2"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="Black">
              <Border Margin="0" Background="{TemplateBinding Background}">
                <Grid Margin="{TemplateBinding Padding}">
                  <ContentPresenter Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource FontBrush}"
                                    TextBlock.FontSize="{TemplateBinding FontSize}" Content="{TemplateBinding Content}"/>
                </Grid>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="content" Property="Opacity" Value=".6"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource HoverStory}"/>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard Storyboard="{StaticResource LeaveStory}"/>
          </Trigger.ExitActions>
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Trigger.EnterActions>
            <BeginStoryboard Storyboard="{StaticResource PressStory}"/>
          </Trigger.EnterActions>
          <Trigger.ExitActions>
            <BeginStoryboard Storyboard="{StaticResource ReleaseStory}"/>
          </Trigger.ExitActions>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style TargetType="Label" BasedOn="{StaticResource Control}">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="4 2"/>
    </Style>
    <Style TargetType="util:EditButton" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>
    </Style>
    <!--<Style TargetType="Button" x:Key="EditButton" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>
      <Setter Property="Content" Value="{DynamicResource PencilPath}"/>
    </Style>-->
    <Style TargetType="Button" x:Key="CloseButton" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>
      <Setter Property="Content">
        <Setter.Value>
          <Path Data="M 0 0 L 8 8 M 8 0 L 0 8" Stroke="{StaticResource FontBrush}" IsHitTestVisible="False"/>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="Button" x:Key="HomeButton" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Width" Value="20"/>
      <Setter Property="Height" Value="20"/>
      <Setter Property="Content">
        <Setter.Value>
          <Path Width="18" Height="18" Fill="{StaticResource FontBrush}" Data="M 9 3 L 16 8 14 8 14 15 10 15 10 12 8 12 8 15 4 15 4 8 2 8 Z"/>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollThumb" TargetType="Thumb">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Foreground" Value="{StaticResource ForeBrush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Border Background="{TemplateBinding Foreground}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ScrollBar" TargetType="ScrollBar">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Width" Value="10"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate>
            <Grid Background="{TemplateBinding Background}">
              <Track Name="PART_Track" IsDirectionReversed="True" Focusable="False">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Background="Transparent" BorderThickness="0" Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Margin="0" Style="{StaticResource ScrollThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Background="Transparent" BorderThickness="0" Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
              </Track>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style TargetType="ScrollViewer">
      <Setter Property="HorizontalContentAlignment" Value="Left" />
      <Setter Property="VerticalContentAlignment" Value="Top" />
      <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ScrollViewer">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
              <Grid Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ScrollContentPresenter Name="ScrollContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"
                         Orientation="Vertical" Minimum="0" Style="{StaticResource ScrollBar}"
                         Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}"
                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1">
                </ScrollBar>
              </Grid>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Storyboard x:Key="ComboItemEnter" Storyboard.TargetProperty="Color">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource ForeColor}" Duration="0:0:0.2"/>
    </Storyboard>
    <Storyboard x:Key="ComboItemLeave" Storyboard.TargetProperty="Color">
      <ColorAnimation Storyboard.TargetProperty="Background.(SolidColorBrush.Color)" To="{StaticResource Back1Color}" Duration="0:0:0.2"/>
    </Storyboard>

    <Style TargetType="ComboBoxItem">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBoxItem">
            <Border Style="{StaticResource Control}" Padding="5 2"
                    Background="{TemplateBinding Background}">
              <ContentPresenter TextBlock.FontSize="12"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsHighlighted" Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard Storyboard="{StaticResource ComboItemEnter}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard Storyboard="{StaticResource ComboItemLeave}"/>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Border Grid.ColumnSpan="2" Background="Transparent"/>
        <Path Name="Arrow" Grid.Column="1" Margin="0 0 6 0"
              VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0"
              Stroke="{StaticResource FontBrush}"/>
      </Grid>
    </ControlTemplate>

    <Style TargetType="ComboBox">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      <Setter Property="Background" Value="{StaticResource Back1Brush}"/>
      <Setter Property="BorderBrush" Value="{StaticResource ForeBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <!--<Setter Property="MinWidth" Value="120"/>-->
      <Setter Property="MinHeight" Value="20"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="ComboBox">
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ForeBrush}">
              <Grid Background="{TemplateBinding Background}">
                <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                              Focusable="false" ClickMode="Press" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="5 2 20 0"
                                  Content="{TemplateBinding SelectionBoxItem}" VerticalAlignment="Top"
                                  HorizontalAlignment="Left" Style="{StaticResource Control}"
                                  TextBlock.FontSize="12" ContentTemplate="{TemplateBinding ItemTemplate}"/>
                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                  <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <ScrollViewer SnapsToDevicePixels="True" VerticalScrollBarVisibility="Hidden">
                      <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                    </ScrollViewer>
                  </Grid>
                </Popup>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard Storyboard="{StaticResource ComboItemEnter}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <BeginStoryboard Storyboard="{StaticResource ComboItemLeave}"/>
                </Trigger.ExitActions>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </Application.Resources>
</Application>
